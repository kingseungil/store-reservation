version: "3.8"
name: store-project

services:
  mysql:
    image: mysql:latest
    container_name: mysql-docker
    ports:
      - "3306:3306"
    volumes:
      - ../mysql-data:/var/lib/mysql
    env_file:
      - env.properties
    environment:
      TZ: Asia/Seoul
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
    networks:
      - store-network

  redis:
    image: redis:latest
    container_name: redis-docker
    ports:
      - "6379:6379"
    volumes:
      - ../redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - store-network

  kafka0:
    image: bitnami/kafka:3.5.1
    restart: unless-stopped
    container_name: kafka0-docker
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_BROKER_ID=0 # broker id
      - KAFKA_CFG_NODE_ID=0 # node id
      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw # cluster id
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka0:9093,1@Kafka1:9093 # controller quorum voters
      - ALLOW_PLAINTEXT_LISTENER=yes # 평문 통신 여부
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true # 토픽 자동 생성 여부
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094 # 리스너
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka0:9092,EXTERNAL://127.0.0.1:10000 # 브로커가 클라이언트에게 알려주는 주소
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT # 보안 프로토콜
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3 # 오프셋 토픽 복제 팩터
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3 # 트랜잭션 상태 로그 복제 팩터
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2 # 트랜잭션 상태 로그 최소 ISR(In-Sync Replicas)
      - KAFKA_CFG_PROCESS_ROLES=controller,broker # 브로커 역할
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER # 컨트롤러 리스너 이름
    networks:
      - store-network
    volumes:
      - ../kafka-data1:/bitnami/kafka


  kafka1:
    image: bitnami/kafka:3.5.1
    restart: always
    container_name: kafka1-docker
    ports:
      - "9093:9092"
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka0:9093,1@Kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka1:9092,EXTERNAL://127.0.0.1:10001
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

    env_file:
      - env.properties
    networks:
      - store-network
    volumes:
      - ../kafka-data2:/bitnami/kafka

networks:
  store-network:
    driver: bridge